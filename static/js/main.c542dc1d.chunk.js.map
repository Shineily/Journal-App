{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","action/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","action/ui.js","action/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRouter.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNote","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","console","log","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","mgsError","password2","isFromValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","PublicRouter","isAuthenticated","Component","rest","props","prototype","PropTypes","bool","isRequired","func","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","Ellipsis","color","size","exact","initialstate","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c542dc1d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCZY2Y5RY2-_ZR0miAgHr_qDXlXoWZaCXs',\r\n  authDomain: 'calendar-app-react-a20bf.firebaseapp.com',\r\n  databaseURL: 'https://calendar-app-react-a20bf.firebaseio.com',\r\n  projectId: 'calendar-app-react-a20bf',\r\n  storageBucket: 'calendar-app-react-a20bf.appspot.com',\r\n  messagingSenderId: '874365948132',\r\n  appId: '1:874365948132:web:3742cb9f874495d16e5cf1',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, googleAuthProvider, firebase };\r\n","export const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dundbscnr/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if(resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}","import { db } from '../firebase/firebase-config';\r\n\r\nexport const loadNotes = async (uid) => {\r\n  const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n  const notes = [];\r\n\r\n  notesSnap.forEach((snapChild) => {\r\n    notes.push({ id: snapChild.id, ...snapChild.data() });\r\n  });\r\n\r\n  return notes;\r\n};\r\n","export const types = {\r\n  login: '[Auth] Login',\r\n  logout: '[Auth] Logout',\r\n\r\n  uiSetError: '[UI] Set Error',\r\n  uiRemoveError: '[UI] Remove Error',\r\n\r\n  uiStartLoading: '[UI] Start Loading',\r\n  uiFinishLoading: '[UI] Finish Loading',\r\n\r\n  notesAddNew: '[Notes] New note',\r\n  notesActive: '[Notes] Set active note',\r\n  notesLoad: '[Notes] Load notes',\r\n  notesUpdated: '[Notes] Updated note',\r\n  notesFileUrl: '[Notes] Update image url',\r\n  notesDelete: '[Notes] Delete note',\r\n  notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n};\r\n","import Swal from 'sweetalert2';\r\nimport { db } from '../firebase/firebase-config';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from '../types/types';\r\n\r\n// react-journal\r\n\r\nexport const startNewNote = () => {\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth;\r\n\r\n    const newNote = {\r\n      title: '',\r\n      body: '',\r\n      date: new Date().getTime(),\r\n    };\r\n\r\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n    console.log(doc);\r\n\r\n    dispatch(activeNote(doc.id, newNote));\r\n    dispatch(addNewNote(doc.id, newNote));\r\n  };\r\n};\r\n\r\nexport const activeNote = (id, note) => ({\r\n  type: types.notesActive,\r\n  payload: {\r\n    id,\r\n    ...note,\r\n  },\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n  type: types.notesAddNew,\r\n  payload: {\r\n    id,\r\n    ...note\r\n  }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n  return async (dispatch) => {\r\n    const notes = await loadNotes(uid);\r\n    dispatch(setNote(notes));\r\n  };\r\n};\r\n\r\nexport const setNote = (notes) => ({\r\n  type: types.notesLoad,\r\n  payload: notes,\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth;\r\n\r\n    if(!note.url) {\r\n      delete note.url;\r\n    }\r\n\r\n    const noteToFirestore = {...note};\r\n    delete noteToFirestore.id;\r\n\r\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n  \r\n    dispatch(refreshNote(note.id, noteToFirestore));\r\n    Swal.fire('Saved', note.title, 'success');\r\n  }\r\n};\r\n\r\nexport const refreshNote = (id, note) => ({\r\n  type: types.notesUpdated,\r\n  payload: {\r\n    id, \r\n    note: {\r\n      id,\r\n      ...note\r\n    }\r\n  }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n  return async(dispatch, getState) => {\r\n    const {active:activeNote} = getState().notes;\r\n    Swal.fire({\r\n      title: 'Uploading...', \r\n      text: 'Please wait...', \r\n      allowOutsideClick: false,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n    const fileUrl = await fileUpload(file);\r\n    activeNote.url = fileUrl;\r\n    dispatch(startSaveNote(activeNote));\r\n    Swal.close();\r\n  }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n    dispatch(deleteNote(id));\r\n  }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n  type: types.notesDelete,\r\n  payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n  type: types.notesLogoutCleaning,\r\n})","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = (newFormState = initialState) => {\r\n    setValues(newFormState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../action/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n  const dispatch = useDispatch();\r\n  const {active} = useSelector(state => state.notes)\r\n\r\n  const handleSave = () => {\r\n    dispatch(startSaveNote(active));\r\n  }\r\n\r\n  const handlePictureClick = () => {\r\n    document.querySelector('#fileSelector').click();\r\n  }\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      dispatch(startUploading(file));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='notes__appbar'>\r\n      <span>28 de agosto 2020</span>\r\n      <input id='fileSelector' name='file' type='file' style={{display: 'none'}} onChange={handleFileChange} />\r\n      <div>\r\n        <button className='btn' onClick={handlePictureClick}>Picture</button>\r\n        <button className='btn' onClick={handleSave}>Save</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../action/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {active: note} = useSelector(state => state.notes);\r\n  const [formValues, handleInputChange, reset] = useForm(note);\r\n  const {body, title, id} = formValues;\r\n\r\n  const activeId = useRef(note.id);\r\n\r\n  useEffect(() => {\r\n    if(note.id !== activeId.current) {\r\n      reset(note);\r\n      activeId.current = note.id;\r\n    }\r\n  }, [note, reset]);\r\n\r\n  useEffect(() => {\r\n    dispatch(activeNote(formValues.id, {...formValues}))\r\n  }, [formValues, dispatch]);\r\n\r\n  const handleDelete = () => {\r\n    dispatch(startDeleting(id))\r\n  }\r\n\r\n  return (\r\n    <div className='notes__main-content'>\r\n      <NotesAppBar />\r\n        <div className='notes__content'>\r\n          <input\r\n            type='text'\r\n            placeholder='Some awesome title'\r\n            name='title'\r\n            className='notes__title-input'\r\n            autoComplete='off'\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <textarea\r\n            placeholder='What happened today'\r\n            name='body'\r\n            className='notes__textarea'\r\n            value={body}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          {\r\n            (note.url) && \r\n            (<div className='notes__image'>\r\n            <img\r\n              src={note.url}\r\n              alt='images'\r\n            />\r\n          </div>)}\r\n        </div>\r\n      <button className='btn btn-danger' onClick={handleDelete}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const NothingSelected = () => {\r\n  return (\r\n    <div className='nothing__main-content'>\r\n      <p>\r\n        Select something\r\n        <br />\r\n        or create an entry\r\n      </p>\r\n      <i className='far fa-star fa-4x mt-5'></i>\r\n    </div>\r\n  );\r\n};\r\n","import { types } from '../types/types';\r\n\r\nexport const setError = (err) => ({\r\n  type: types.uiSetError,\r\n  payload: err,\r\n});\r\n\r\nexport const removeError = () => ({\r\n  type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading,\r\n});\r\n","import Swal from 'sweetalert2';\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\n\r\nimport { types } from '../types/types';\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n        dispatch(finishLoading());\r\n      })\r\n      .catch((e) => {\r\n        dispatch(finishLoading());\r\n        Swal.fire('Error', e.message, 'error');\r\n      });\r\n  };\r\n};\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        await user.updateProfile({ displayName: name });\r\n        dispatch(login(user.uid, user.displayName));\r\n      })\r\n      .catch((e) => Swal.fire('Error', e.message, 'error'));\r\n  };\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n      });\r\n  };\r\n};\r\n\r\nexport const login = (uid, displayName) => ({\r\n  type: types.login,\r\n  payload: {\r\n    uid,\r\n    displayName,\r\n  },\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n    dispatch(logout());\r\n    dispatch(noteLogout())\r\n  };\r\n};\r\n\r\nexport const logout = () => ({\r\n  type: types.logout,\r\n});\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../action/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n  const noteDate = moment(date);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEntryClick = () => {\r\n    dispatch(activeNote(id, {\r\n      date, title, body, url\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className='journal__entry pointer animate__animated animate__fadeIn animate__faster' onClick={handleEntryClick}>\r\n      {url && (\r\n        <div\r\n          className='journal__entry-picture'\r\n          style={{\r\n            backgroundSize: 'cover',\r\n            backgroundImage: `url(${url})`,\r\n          }}\r\n        ></div>\r\n      )}\r\n      <div className='journal__entry-body'>\r\n        <p className='journal__entry-title'>{title}</p>\r\n        <p className='journal__entry-content'>{body}</p>\r\n      </div>\r\n      <div className='journal__entry-date-box'>\r\n        <span>{noteDate.format('ddd')}</span>\r\n        <h4>{noteDate.format('Do')}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n  const { notes } = useSelector((state) => state.notes);\r\n\r\n  return (\r\n    <div className='journal__entries'>\r\n      {notes.map((note) => (\r\n        <JournalEntry key={note.id} {...note} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../action/auth';\r\nimport { startNewNote } from '../../action/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n  const { name } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    dispatch(startNewNote());\r\n  };\r\n\r\n  return (\r\n    <aside className='journal__sidebar'>\r\n      <div className='journal__sidebar-navbar'>\r\n        <h3 className='mt-5'>\r\n          <i className='far fa-moon'></i>\r\n          <span> {name}</span>\r\n        </h3>\r\n        <button className='btn' onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n      <div className='journal__new-entry' onClick={handleAddNew}>\r\n        <i className='far fa-calendar-plus fa-5x'></i>\r\n        <p className='mt-5'>New entry</p>\r\n      </div>\r\n      <JournalEntries />\r\n    </aside>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n  const { active } = useSelector((state) => state.notes);\r\n  return (\r\n    <div className='journal__main-content animate__animated animate__fadeIn animate__faster'>\r\n      <Sidebar />\r\n      <main>{active ? <NoteScreen /> : <NothingSelected />}</main>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../action/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.ui);\r\n  // console.log(loading);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: 'shineily@gmail.com',\r\n    password: '1234567',\r\n  });\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLoginEmailPassword(email, password));\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    dispatch(startGoogleLogin());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className='auth__title'>Login</h3>\r\n      <form className='animate__animated animate__fadeIn animate__faster' onSubmit={handleLogin}>\r\n        <input\r\n          type='text'\r\n          placeholder='Email'\r\n          name='email'\r\n          className='auth__input'\r\n          autoComplete='off'\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='Password'\r\n          name='password'\r\n          className='auth__input'\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button\r\n          type='submit'\r\n          className='btn btn-primary btn-block'\r\n          disabled={loading}\r\n        >\r\n          Login\r\n        </button>\r\n        <div className='auth__social-networks'>\r\n          <p>Login with social networks</p>\r\n          <div className='google-btn' onClick={handleGoogleLogin}>\r\n            <div className='google-icon-wrapper'>\r\n              <img\r\n                className='google-icon'\r\n                src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'\r\n                alt='google button'\r\n              />\r\n            </div>\r\n            <p className='btn-text'>\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <Link to='/auth/register' className='link'>\r\n          Create new account\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailPasswordName } from '../../action/auth';\r\nimport { removeError, setError } from '../../action/ui';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { mgsError } = useSelector((state) => state.ui);\r\n  // console.log(mgsError);\r\n  const [formValues, handleInputChange] = useForm({\r\n    name: 'Shineily L',\r\n    email: 'shineily@gmail.com',\r\n    password: '1234567',\r\n    password2: '1234567',\r\n  });\r\n\r\n  const { name, email, password, password2 } = formValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    if (isFromValid()) {\r\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n    }\r\n  };\r\n\r\n  const isFromValid = () => {\r\n    if (name.trim().length === 0) {\r\n      dispatch(setError('Name is required'));\r\n      return false;\r\n    } else if (!validator.isEmail(email)) {\r\n      dispatch(setError('Email is not valid'));\r\n      return false;\r\n    } else if (password !== password2 || password.length < 5) {\r\n      dispatch(\r\n        setError(\r\n          'Password should be at least 6 characters and match each other'\r\n        )\r\n      );\r\n      return false;\r\n    }\r\n    dispatch(removeError());\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className='auth__title'>Register</h3>\r\n      <form className='animate__animated animate__fadeIn animate__faster' onSubmit={handleRegister}>\r\n        {mgsError && <div className='auth__alert-error'>{mgsError}</div>}\r\n        <input\r\n          type='text'\r\n          placeholder='Name'\r\n          name='name'\r\n          className='auth__input'\r\n          autoComplete='off'\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type='text'\r\n          placeholder='Email'\r\n          name='email'\r\n          className='auth__input'\r\n          autoComplete='off'\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='Password'\r\n          name='password'\r\n          className='auth__input'\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='Confirm password'\r\n          name='password2'\r\n          className='auth__input'\r\n          value={password2}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button type='submit' className='btn btn-primary btn-block mb-5'>\r\n          Login\r\n        </button>\r\n\r\n        <Link to='/auth/login' className='link'>\r\n          Already register?\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div className='auth__main'>\r\n      <div className='auth__box-container'>\r\n        <Switch>\r\n          <Route path='/auth/login' component={LoginScreen} />\r\n          <Route path='/auth/register' component={RegisterScreen} />\r\n          <Redirect to='/auth/login' />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRouter = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to='/' />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRouter.prototype = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to='/auth/login' />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.prototype = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom';\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { login } from '../action/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Ellipsis } from 'react-css-spinners';\r\nimport { PublicRouter } from './PublicRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingNotes } from '../action/notes';\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [checking, setChecking] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user?.uid) {\r\n        dispatch(login(user.uid, user.displayName));\r\n        setIsLoggedIn(true);\r\n\r\n        dispatch(startLoadingNotes(user.uid));\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      setChecking(false);\r\n    });\r\n  }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n  if (checking) {\r\n    return (\r\n      <div className='auth__login'>\r\n        <Ellipsis color='#ffdf00' size={200} />\r\n        <h1>Wait...</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRouter\r\n            path='/auth'\r\n            component={AuthRouter}\r\n            isAuthenticated={isLoggedIn}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path='/'\r\n            component={JournalScreen}\r\n            isAuthenticated={isLoggedIn}\r\n          />\r\n          <Redirect to='/auth/login' />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialstate = {\r\n  notes: [],\r\n  active: null,\r\n};\r\n\r\nexport const notesReducer = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case types.notesActive:\r\n      return {\r\n        ...state,\r\n        active: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case types.notesAddNew:\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes]\r\n      }\r\n    case types.notesLoad:\r\n      return {\r\n        ...state,\r\n        notes: [...action.payload],\r\n      };\r\n    case types.notesUpdated:\r\n      return {\r\n        ...state,\r\n        notes: state.notes.map(\r\n          note => note.id === action.payload.id\r\n            ? action.payload.note\r\n            : note\r\n        )\r\n      }\r\n    case types.notesDelete:\r\n      return {\r\n        ...state,\r\n        active: null,\r\n        notes: state.notes.filter(note => note.id !== action.payload)\r\n      }\r\n    case types.notesLogoutCleaning:\r\n      return {\r\n        ...state,\r\n        active: null,\r\n        notes: []\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  mgsError: null,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        mgsError: action.payload,\r\n      };\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        mgsError: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  notes: notesReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { types } from '../types/types';\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName,\r\n      };\r\n    case types.logout:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(<JournalApp />, document.getElementById('root'));\n"],"sourceRoot":""}